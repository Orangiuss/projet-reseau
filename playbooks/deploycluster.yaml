---
- name: Create Projet infrastructure LXD containers
  hosts: localhost
  tasks:
    # - name: Delete bridge networks
    #   command: brctl delbr "{{ item }}"
    #   become: true
    #   with_items:
    #     - br01
    #     - br02
    # - name: Create bridge networks
    #   command: brctl addbr "{{ item }}"
    #   become: true
    #   with_items:
    #     - br01
    #     - br02
    # - name: ip link set dev br01 up
    #   command: ip link set dev "{{ item }}" up
    #   become: true
    #   with_items:
    #     - br01
    #     - br02

    # - name: lxc profile copy default k8s
    #   community.general.lxd_profile_copy:
    #     name: k8s
    #     copy_from: default
    #     state: present

    # - name: Create k8s profile lxd
    #   community.general.lxd_profile:
    #     name: k8s
    #     community.general.lxd_profile:
    #     config:
    #       limits.cpu: "2"
    #       limits.memory: 2GB
    #       limits.memory.swap: "false"
    #       linux.kernel_modules: ip_tables,ip6_tables,nf_nat,overlay,br_netfilter
    #       raw.lxc: "lxc.apparmor.profile=unconfined\nlxc.cap.drop= \nlxc.cgroup.devices.allow=a\nlxc.mount.auto=proc:rw sys:rw"
    #       security.nesting: "true"
    #       security.privileged: "true"
    #       description: Kubernetes LXD profile
    #       devices:
    #         eth0:
    #           name: eth0
    #           nictype: bridged
    #           parent: lxdbr0
    #           type: nic
    #         root:
    #           path: /
    #           pool: default
    #           type: disk
    #       name: k8s
    #       used_by: []
    #     state: present

    - name: Create all LXD virtual machines 
      community.general.lxd_container:
        name: "{{ item }}"
        ignore_volatile_options: true
        state: started
        type: virtual-machine
        source:
          type: image
          mode: pull
          server: https://images.linuxcontainers.org
          protocol: simplestreams
          alias: ubuntu/focal/amd64
        config:
          limits.cpu: "2"
          limits.memory: 2GB
        profiles: ["k8s"]
        wait_for_ipv4_addresses: true
      with_items: "{{ groups['all'] }}"

- name: Docker/Kubernetes roles
  hosts: k8s
  connection: lxd
  roles:
    - docker
#    - config-docker
    - kubernetes
    - config-certificat

- name: Kubernetes master roles
  hosts: mgr
  connection: lxd
  roles:
    - kubernetes-master

- name: Kubernetes worker roles
  hosts: worker
  connection: lxd
  roles:
    - kubernetes-node

- name: Add nodes to Kubernetes cluster
  hosts: mgr
  connection: lxd
  tasks:
    - name: Add nodes to Kubernetes cluster
      shell: kubectl label node "{{ item }}" node-role.kubernetes.io/worker=worker
      with_items: "{{ groups['worker'] }}"

# - name: Deploy Jenkins
#   hosts: jenkins
#   connection: lxd
#   become: true
#   roles:
#     - docker
#     - jenkins
- name: Deploy Jenkins
  hosts: mgr
  connection: lxd
  become: true
  roles:
    - jenkins
#    - deploy

- name: Deploiement registre local
  hosts: mgr1
  roles:
    - registry
